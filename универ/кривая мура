import turtle

# Рекурсивная функция для рисования кривой Мура
def moore_curve_recursive(t, n, length, direction):
    if n == 0:
        t.forward(length)
    else:
        if direction == 'L':
            t.left(90)
            moore_curve_recursive(t, n-1, length, 'U')
            t.right(90)
            moore_curve_recursive(t, n-1, length, 'L')
            moore_curve_recursive(t, n-1, length, 'L')
            t.right(90)
            moore_curve_recursive(t, n-1, length, 'D')
            t.left(90)
        else:
            t.right(90)
            moore_curve_recursive(t, n-1, length, 'U')
            t.left(90)
            moore_curve_recursive(t, n-1, length, 'R')
            moore_curve_recursive(t, n-1, length, 'R')
            t.left(90)
            moore_curve_recursive(t, n-1, length, 'D')
            t.right(90)

# Итерационная функция для рисования кривой Мура с помощью L-системы
def moore_curve_iterative(t, n, length):
    rules = {'L': 'LUR+LDL+R', 'R': 'RUL+RDR+L'}
    axiom = 'L'

    for _ in range(n):
        new_axiom = ''
        for char in axiom:
            if char in rules:
                new_axiom += rules[char]
            else:
                new_axiom += char
        axiom = new_axiom

    for char in axiom:
        if char == 'L' or char == 'R':
            t.forward(length)
        elif char == 'U':
            t.left(90)
        elif char == 'D':
            t.right(90)
        elif char == '+':
            t.right(90)
        elif char == '-':
            t.left(90)

# Создание экземпляра черепахи и настройка экрана
t = turtle.Turtle()
screen = turtle.Screen()
t.speed('fastest')

# Рисование кривой Мура рекурсивно
t.penup()
t.goto(-200, 0)
t.pendown()
moore_curve_recursive(t, 4, 5, 'L')

# Рисование кривой Мура итерационно с помощью L-системы
t.penup()
t.goto(200, 0)
t.pendown()
moore_curve_iterative(t, 4, 5)

screen.exitonclick()